# compose.yaml
services:
  kernelsnoop:
    build:
      context: ../
      dockerfile: docker/Dockerfile
    cap_add:
      - CAP_NET_ADMIN
      - CAP_BPF
      - CAP_PERFMON
    container_name: kernelsnoop
  fluent-bit:
    image: fluent/fluent-bit # use latest?
    volumes:
      - ./fluent-bit.conf:/fluent-bit/etc/fluent-bit.conf
      - /var/lib/docker/containers:/var/lib/docker/containers:ro
    depends_on:
      - kernelsnoop
    container_name: fluent-bit

  influxdb:
    image: influxdb:2
    container_name: influxdb
    ports:
      - 8086:8086
    environment:
      DOCKER_INFLUXDB_INIT_MODE: setup
      DOCKER_INFLUXDB_INIT_USERNAME_FILE: /run/secrets/influxdb2-admin-username
      DOCKER_INFLUXDB_INIT_PASSWORD_FILE: /run/secrets/influxdb2-admin-password
      DOCKER_INFLUXDB_INIT_ADMIN_TOKEN_FILE: /run/secrets/influxdb2-admin-token
      DOCKER_INFLUXDB_INIT_ORG: containerscrew
      DOCKER_INFLUXDB_INIT_BUCKET: kernelsnoop
      DOCKER_INFLUXDB_INIT_RETENTION: 1w
    secrets:
      - influxdb2-admin-username
      - influxdb2-admin-password
      - influxdb2-admin-token
    volumes:
      - type: volume
        source: influxdb2-data
        target: /var/lib/influxdb2
      - type: volume
        source: influxdb2-config
        target: /etc/influxdb2

  grafana:
    image: grafana/grafana
    container_name: grafana
    ports:
      - 3000:3000
    restart: unless-stopped
    environment:
      - GF_SECURITY_ADMIN_USER=admin
      - GF_SECURITY_ADMIN_PASSWORD=grafana
    volumes:
      - grafana-datasources:/etc/grafana/provisioning/datasources
      - grafana-storage:/var/lib/grafana

secrets:
  influxdb2-admin-username:
    file: .env/.env.influxdb2-admin-username
  influxdb2-admin-password:
    file: .env/.env.influxdb2-admin-password
  influxdb2-admin-token:
    file: .env/.env.influxdb2-admin-token

volumes:
  influxdb2-data:
  influxdb2-config:
  grafana-datasources:
  grafana-storage:

# services:
#  iproxy:
#    build:
#      context: .
#      dockerfile: Dockerfile
#    container_name: iproxy
#    env_file:
#      - .env
#    networks:
#      - ipfinder
#    ports:
#      - 8080:8080
#    restart: always
  # mongodb:
  #   image: docker.io/mongo:latest
  #   container_name: mongo
  #   networks:
  #     - iproxy
  #   restart: always
  #   ports:
  #     - 27017:27017
  #   environment:
  #     - MONGO_INITDB_ROOT_USERNAME=admin
  #     - MONGO_INITDB_ROOT_PASSWORD=admin
  #     - MONGO_INITDB_DATABASE=iproxy
  #   volumes:
  #     - mongodb:/data/db
#  prometheus:
#    image: prom/prometheus
#    container_name: prometheus
#    networks:
#      - ipfinder
#    command:
#      - '--config.file=/etc/prometheus/prometheus.yml'
#    ports:
#      - 9090:9090
#    restart: unless-stopped
#    volumes:
#      - ./prometheus:/etc/prometheus
#      - prom_data:/prometheus
#  grafana:
#    image: grafana/grafana
#    container_name: grafana
#    networks:
#      - ipfinder
#    ports:
#      - 3000:3000
#    restart: unless-stopped
#    environment:
#      - GF_SECURITY_ADMIN_USER=admin
#      - GF_SECURITY_ADMIN_PASSWORD=grafana
#    volumes:
#      - ./grafana:/etc/grafana/provisioning/datasources

# networks:
#   iproxy:
#     driver: bridge

# volumes:
#   mongodb:
#  prom_data:
